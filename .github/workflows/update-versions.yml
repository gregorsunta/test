name: Update Versions

on:
  release:
    types: [ published ]  # Only run when a release is published (not edited)
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-versions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper tag comparison
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Gather release and change information
      id: gather-info
      run: |
        echo "🔍 Finding latest stable release..."
        
        # Get all releases and find the latest non-pre-release
        LATEST_STABLE=$(gh api repos/${{ github.repository }}/releases --jq '.[] | select(.prerelease == false) | .tag_name' | head -n1)
        
        if [[ -z "$LATEST_STABLE" ]]; then
          echo "⚠️  No GitHub releases found, falling back to git tags..."
          # Fallback to latest tag in x.x.x format if no releases found
          LATEST_STABLE=$(git tag -l --sort=-version:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
        fi
        
        if [[ -z "$LATEST_STABLE" ]]; then
          echo "❌ No stable tags found!"
          exit 1
        fi
        
        echo "✅ Found stable tag: $LATEST_STABLE"
        
        # Get changed files (only CSS/JS related files for performance)
        echo "🔍 Gathering changed files..."
        CHANGED_FILES=$(git diff --name-only "$LATEST_STABLE" HEAD -- "*.css" "*.less" "*.scss" "*.js" "*.ts" "*.jsx" "*.tsx")
        
        # Set outputs - only raw data, no processing
        echo "stable_tag=$LATEST_STABLE" >> $GITHUB_OUTPUT
        echo "changed_files<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "📊 Gathered information:"
        echo "  Stable tag: $LATEST_STABLE"
        if [[ -n "$CHANGED_FILES" ]]; then
          echo "  Changed files:"
          echo "$CHANGED_FILES" | sed 's/^/    /'
        else
          echo "  No CSS/JS files changed"
        fi
    
    - name: Update versions
      run: |
        echo "🚀 Running version update script..."
        ./update-version.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LAST_STABLE_TAG: ${{ steps.gather-info.outputs.stable_tag }}
        CHANGED_FILES: ${{ steps.gather-info.outputs.changed_files }}
    
    - name: Create summary
      if: always()
      run: |
        echo "## Version Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Stable Tag:** \`${{ steps.gather-info.outputs.stable_tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ -n "${{ steps.gather-info.outputs.changed_files }}" ]]; then
          echo "**Changed Files:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.gather-info.outputs.changed_files }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "**No CSS/JS files changed**" >> $GITHUB_STEP_SUMMARY
        fi
